plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.diffplug.spotless" version "6.25.0"
}

group = 'de.unimarburg.diz'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.integration:spring-integration-core:6.3.2'
    implementation "org.springframework.integration:spring-integration-zip:6.3.4"
    implementation 'org.springframework.integration:spring-integration-file:6.3.5'

    implementation 'org.springframework.integration:spring-integration-sftp'
    implementation "org.springframework.integration:spring-integration-kafka"
    implementation "redis.clients:jedis"
    implementation 'org.json:json:20240303'
    implementation "org.springframework.integration:spring-integration-redis"
    implementation 'com.jayway.jsonpath:json-path:2.9.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.springframework.integration:spring-integration-test-support'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        importOrder() // standard import order
        // You probably want an empty string at the end - all of the
        // imports you didn't specify explicitly will go there.

        removeUnusedImports()

        licenseHeader '/* GNU AFFERO GENERAL PUBLIC LICENSE  Version 3 (C)$YEAR Datenintegrationszentrum Fachbereich Medizin Philipps Universit√§t Marburg */'
        formatAnnotations()
        cleanthat()
        googleJavaFormat() // has its own section below
    }
}
