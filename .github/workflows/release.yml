name: release

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build"]
    branches: "main"
    types: [completed]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  semantic-release:
    name: Semantic release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.event_name != 'pull_request' && github.event_name != 'release' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits@5.0.0
        env:
          # workflows created by GITHUB_TOKEN cannot trigger other workflows, see below
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

  docker-build-and-push:
    name: Docker build & publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@06895751d15a223ec091bea144ad5c7f50d228d0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Execute image build and push
        run: |
          ./gradlew bootBuildImage
          docker tag docker.io/library/sftp-to-kafka:latest ${{ steps.meta.outputs.tags }}
          docker push ${{ steps.meta.outputs.tags }}
          
